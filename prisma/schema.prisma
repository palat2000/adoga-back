generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String? @unique
  mobile    String? @unique
  firstName String  @map("first_name")
  lastName  String  @map("last_name")
  password  String
  books     Book[]
}

model Placer {
  id       String    @id @default(uuid())
  name     String    @unique
  type     TypePlace
  email    String?   @unique
  mobile   String?   @unique
  password String
  lat      Decimal?
  lng      Decimal?
  rooms    Room[]
}

model Customer {
  id        String @id @default(uuid())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String
  mobile    String
  books     Book[]
}

model Book {
  id         String    @id @default(uuid())
  fromDate   DateTime  @map("from_date")
  toDate     DateTime  @map("to_date")
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?   @map("customer_id")
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?   @map("user_id")
  orders     Order[]
}

model Room {
  id                  String  @id @default(uuid())
  totalRoomCount      Int     @map("total_room_count")
  remaining           Int
  name                String
  price               Int
  maximumNumberPeople Int     @map("maximum_number_people")
  desc                String
  placer              Placer  @relation(fields: [placerId], references: [id])
  placerId            String  @map("placer_id")
  images              Image[]
}

model Order {
  id     String      @id @default(uuid())
  amount Int
  date   DateTime    @default(now())
  status OrderStatus
  book   Book        @relation(fields: [bookId], references: [id])
  bookId String      @map("book_id")
}

model Image {
  id     String @id @default(uuid())
  image  String
  room   Room   @relation(fields: [roomId], references: [id])
  roomId String
}

enum OrderStatus {
  PENDING
  SUCCESS
}

enum TypePlace {
  HOTEL
  VACATION_HOME
  VILLA
  CONDO_APARTMENT
}
